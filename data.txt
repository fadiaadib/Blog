[{"id":"0.376007791329801","title":"Installing Angular CLI","body":"<strong>Updating npm!</strong>\r\n<p class=\"lite\">sudo npm install -g npm</p>\r\n<strong>Updating the CLI:</strong>\r\n<ol class=\"lite\"> \r\n<li>sudo npm uninstall -g angular-cli @angular/cli </li>\r\n<li>npm cache verify </li>\r\n</ol>\r\n<strong>Installing Angular:</strong>\r\n<ul class=\"lite\"> \r\n<li>sudo npm install -g @angular/cli </li>\r\n</ul>\r\n<strong>Creating an Angular project:</strong>\r\n<ul class=\"lite\"> \r\n<li>ng new my-first-app --no-strict --standalone false --routing false</li>\r\n</ul>\r\n<strong>Start the Angular server:</strong>\r\n<ul class=\"lite\"> \r\n<li>ng serve</li>\r\n</ul>\r\n<strong>Installing Bootstrap 3:</strong>\r\n<ul class=\"lite\"> \r\n<li>npm install --save bootstrap@3</li>\r\n<li>add <code>\"node_modules/bootstrap/dist/css/bootstrap.min.css\",</code> to the <code>styles</code> in angular.json</li>\r\n<li>ng serve</li>\r\n</ul>","date":"Sat Feb 17 2024"},{"id":"0.8139831726400704","title":"Webpack integration","body":"<strong id=\"npm-commands\">npm commands</strong>\r\n<ol class=\"lite\">\r\n<li>npm init</li>\r\n<li>npm install</li>\r\n<li>npm start</li>\r\n</ol>\r\n\r\n<strong id=\"lite-server\">lite-server</strong>\r\n<ul class=\"lite\">\r\n<li>Allows you to run a lite server on your local machine</li>\r\n<li>npm install --save-dev lite-server</li>\r\n<li>Add this in <code>&quot;scripts&quot;</code> in the package.json: <code>&quot;start&quot;: &quot;lite-server&quot;</code></li>\r\n</ul>\r\n\r\n<strong id=\"tsc-commands\">tsc commands</strong>\r\n<ul class= \"lite\">\r\n<li>tsc --init</li>\r\n<li>tsc -w</li>\r\n</ul>\r\n\r\n<strong id=\"to-install-webpack\">To install webpack</strong>\r\n<p>npm install --save-dev webpack webpack-cli webpack-dev-server typescript ts-loader</p>\r\n<ul>\r\n<li><p>Create a <strong>webpack.config.js</strong> file in your root dir</p>\r\n<ul>\r\n<li><p>For development:</p>\r\n<pre><code>const path = require(<span class=\"hljs-string\">\"path\"</span>);\r\nmodule.exports = {\r\n<span class=\"hljs-symbol\">  mode:</span> <span class=\"hljs-string\">\"development\"</span>,\r\n<span class=\"hljs-symbol\">  entry:</span> <span class=\"hljs-string\">\"./src/app.ts\"</span>,\r\n<span class=\"hljs-symbol\">  devServer:</span> {\r\n<span class=\"hljs-symbol\">    static:</span> [\r\n      {\r\n<span class=\"hljs-symbol\">        directory:</span> path.join(__dirname),\r\n      },\r\n    ],\r\n<span class=\"hljs-symbol\">    client:</span> {\r\n<span class=\"hljs-symbol\">      overlay:</span> false,\r\n    },\r\n  },\r\n<span class=\"hljs-symbol\">  output:</span> {\r\n<span class=\"hljs-symbol\">    filename:</span> <span class=\"hljs-string\">\"bundle.js\"</span>,\r\n<span class=\"hljs-symbol\">    path:</span> path.resolve(__dirname, <span class=\"hljs-string\">\"dist\"</span>),\r\n<span class=\"hljs-symbol\">    publicPath:</span> <span class=\"hljs-string\">\"/dist/\"</span>,\r\n  },\r\n<span class=\"hljs-symbol\">  module:</span> {\r\n<span class=\"hljs-symbol\">    rules:</span> [\r\n      {\r\n<span class=\"hljs-symbol\">        test:</span> /\\.tsx?$/,\r\n<span class=\"hljs-symbol\">        use:</span> <span class=\"hljs-string\">\"ts-loader\"</span>,\r\n<span class=\"hljs-symbol\">        exclude:</span> /node_modules/,\r\n      },\r\n    ],\r\n  },\r\n<span class=\"hljs-symbol\">  resolve:</span> {\r\n<span class=\"hljs-symbol\">    extensions:</span> [<span class=\"hljs-string\">\".ts\"</span>, <span class=\"hljs-string\">\".js\"</span>],\r\n  },\r\n};\r\n</code></pre></li>\r\n</ul>\r\n</li>\r\n<li><p>in tsconfig.json</p>\r\n<ul>\r\n<li>set <code>&quot;sourceMap&quot;: true</code></li>\r\n<li>you do not need to specify a <code>rootDir</code></li>\r\n</ul>\r\n</li>\r\n<li>in package.json<ul>\r\n<li>add <code>&quot;build&quot;: &quot;webpack&quot;</code> to the <code>&quot;scripts&quot;</code></li>\r\n<li>add <code>&quot;start&quot;: &quot;webpack-dev-server&quot;</code> to the <code>&quot;scripts&quot;</code></li>\r\n</ul>\r\n</li>\r\n<li>Remove extensions from your imports in your code</li>\r\n<li><p>For production,</p>\r\n<ul>\r\n<li><p>Create a webpack.config.prod.js file:</p>\r\n<pre><code>const path = require(<span class=\"hljs-string\">\"path\"</span>);\r\nconst CleanPlugin = require(<span class=\"hljs-string\">\"clean-webpack-plugin\"</span>);\r\n\r\nmodule.exports = {\r\n<span class=\"hljs-symbol\">  mode:</span> <span class=\"hljs-string\">\"production\"</span>,\r\n<span class=\"hljs-symbol\">  entry:</span> <span class=\"hljs-string\">\"./src/app.ts\"</span>,\r\n<span class=\"hljs-symbol\">  devServer:</span> {\r\n<span class=\"hljs-symbol\">    static:</span> [\r\n      {\r\n<span class=\"hljs-symbol\">        directory:</span> path.join(__dirname),\r\n      },\r\n    ],\r\n<span class=\"hljs-symbol\">    client:</span> {\r\n<span class=\"hljs-symbol\">      overlay:</span> false,\r\n    },\r\n  },\r\n<span class=\"hljs-symbol\">  output:</span> {\r\n<span class=\"hljs-symbol\">    filename:</span> <span class=\"hljs-string\">\"bundle.js\"</span>,\r\n<span class=\"hljs-symbol\">    path:</span> path.resolve(__dirname, <span class=\"hljs-string\">\"dist\"</span>),\r\n  },\r\n<span class=\"hljs-symbol\">  module:</span> {\r\n<span class=\"hljs-symbol\">    rules:</span> [\r\n      {\r\n<span class=\"hljs-symbol\">        test:</span> /\\.tsx?$/,\r\n<span class=\"hljs-symbol\">        use:</span> <span class=\"hljs-string\">\"ts-loader\"</span>,\r\n<span class=\"hljs-symbol\">        exclude:</span> /node_modules/,\r\n      },\r\n    ],\r\n  },\r\n<span class=\"hljs-symbol\">  resolve:</span> {\r\n<span class=\"hljs-symbol\">    extensions:</span> [<span class=\"hljs-string\">\".ts\"</span>, <span class=\"hljs-string\">\".js\"</span>],\r\n  },\r\n<span class=\"hljs-symbol\">  plugins:</span> [new CleanPlugin.CleanWebpackPlugin()],\r\n};\r\n</code></pre></li>\r\n<li><p>in package.json</p>\r\n<ul>\r\n<li>add <code>&quot;build&quot;: &quot;webpack --config webpack.config.prod.js&quot;</code> to the <code>&quot;scripts&quot;</code></li>\r\n</ul>\r\n</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n","date":"Mon Feb 12 2024"},{"id":"0.24434283454486216","title":"Angular Components","body":"<strong>To create a new component:</strong>\r\n<p>\r\n<code>ng generate component servers</code> or <code>ng g c servers</code></p>\r\n<strong>To create a new directive:</strong>\r\n<p>\r\n<code>ng generate directive app-directive</code> or <code>ng g d app-directive</code></p>","date":"Sat Feb 17 2024"},{"id":0.9804366657473877,"title":"Installing RxJS","body":"<ul>\r\n<li><code>npm install --save rxjs@6</code></li>\r\n<li><code>npm install --save rxjs-compat</code></li>\r\n</ul>","date":"Sat Feb 17 2024"}]